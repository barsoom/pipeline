version: 2

jobs:
  test:
    docker:
      - image: cimg/ruby:3.2.0-node # Keep in sync with Gemfile
        environment:
          - BUNDLE_PATH=vendor/bundle

      - image: redis:6.2.3-alpine # Keep versions in sync with dev.yml
      - image: postgres:14.4-alpine # Keep versions in sync with dev.yml
        environment:
          - POSTGRES_USER=postgres
          - POSTGRES_DB=pipeline_test
          - POSTGRES_PASSWORD=password

    steps:
      - checkout
      - run:
          name: "Configure Bundler"
          command: gem install bundler -v $(grep -A1 "BUNDLED WITH" Gemfile.lock | tail -n1 | xargs)

      # Bundle and cache gems for later builds
      - restore_cache:
          name: "Restoring gems cache"
          key: pipeline-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: "Bundling gems"
          command: bundle check || bundle install
      - save_cache:
          name: "Saving gems cache"
          key: pipeline-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: "Preparing database"
          command: bash script/ci/prepare_database.sh

      - run:
          name: "Running tests"
          command: script/ci/pipeline.sh pipeline_tests "bundle exec rake"

  deploy:
    docker:
      - image: cimg/ruby:3.2  # At least one deploy script needs ruby

    steps:
      - checkout
      - run:
          name: "Deploying to production"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              script/ci/pipeline.sh pipeline_deploy "script/ci/deploy.sh $HEROKU_APP_NAME"
            fi

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test:
          context: shared-config
      - deploy:
          context: shared-config
          requires:
            - test
